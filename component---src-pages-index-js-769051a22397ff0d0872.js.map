{"version":3,"file":"component---src-pages-index-js-769051a22397ff0d0872.js","mappings":"uOA8BA,EAxBiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACVC,GAAQC,EAAAA,EAAAA,GAASF,EAAKG,YAAYC,gBACxC,OAAO,gCACP,uBAAKC,GAAG,aACJ,gBAAC,EAAAC,KAAD,CAAMC,GAAKP,EAAKG,YAAYK,KAAOC,UAAU,qBACzC,uBAAKA,UAAU,iBACX,gBAAC,EAAAC,EAAD,CAAaT,MAAOA,EAAOU,IAAKX,EAAKG,YAAYS,YAErD,uBAAKH,UAAU,gBACX,wBAAMA,UAAU,kBACVT,EAAKG,YAAYS,SACjBZ,EAAKG,YAAYU,MAEvB,sBAAIJ,UAAU,mBACRT,EAAKG,YAAYW,OAEvB,qBAAGL,UAAU,qBACPT,EAAKe,cCsB3B,EAjCkB,SAAC,GAMZ,IAHKC,EAGN,EALFC,KACIC,kBACIF,MAIR,EAA0BG,EAAAA,SAAe,IAAlCC,EAAP,KAAcC,EAAd,KACA,EAAkCF,EAAAA,UAAe,GAA1CG,EAAP,KAAkBC,EAAlB,KAUMC,GARQJ,EAAQJ,EAAMS,QAAO,SAAAzB,GAC/B,IAAOe,EAAWf,EAAXe,QACP,EAA0Bf,EAAKG,YAC/B,MACI,CAFJ,EAAOW,MAAP,EAAcF,SAEQG,GAASW,KAAI,SAAAC,GAAI,OACQ,OAAvCA,EAAKC,MAAM,IAAIC,OAAOT,EAAO,SAA+BU,UAAS,MAE5Ed,GACkBU,KAAI,SAAA1B,GAAI,OAC3B,gBAAC,EAAD,CAAU+B,IAAK/B,EAAKG,YAAYK,KAAMR,KAAMA,OAChD,OAAO,gBAAC,IAAD,CAAQgC,UAAW,CAAEV,UAAAA,EAAWC,aAAAA,EAAcH,MAAAA,EAAOC,SAAAA,GAChDY,SACI,4BACI,gBAAC,IAAD,MACA,uBAAKxB,UAAU,cACX,gBAAC,EAAAH,KAAD,CAAMC,GAAG,IAAIE,UAAU,gBAAvB,OACA,gBAAC,EAAAH,KAAD,CAAMC,GAAG,aAAT,aAEHiB","sources":["webpack://gatsby-starter-default/./src/components/postlink.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\nimport \"../css/postlink.css\"\r\n\r\nconst PostLink = ({ post }) => {\r\n    const image = getImage(post.frontmatter.thumbnailImage)\r\n    return <>\r\n    <div id=\"post-list\">\r\n        <Link to={ post.frontmatter.path } className=\"post-list-wrapper\">\r\n            <div className=\"image-wrapper\">\r\n                <GatsbyImage image={image} alt={post.frontmatter.category}/>\r\n            </div>\r\n            <div className=\"text-wrapper\">\r\n                <span className=\"post-list-date\">\r\n                    { post.frontmatter.category }\r\n                    { post.frontmatter.date }\r\n                </span>\r\n                <h3 className=\"post-list-title\">\r\n                    { post.frontmatter.title }\r\n                </h3>\r\n                <p className=\"post-list-excerpt\">\r\n                    { post.excerpt }\r\n                </p>\r\n            </div>\r\n        </Link>\r\n    </div></>\r\n}\r\n\r\nexport default PostLink","import React from \"react\"\r\n\r\nimport { graphql, Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport About from \"../components/about\"\r\nimport PostLink from \"../components/postlink\"\r\n\r\n// import * as styles from \"../css/index.module.css\"\r\nimport \"../css/index.css\"\r\nimport \"../css/about.css\"\r\n\r\nconst IndexPage = ({\r\n    data: {\r\n        allMarkdownRemark: {\r\n            nodes\r\n        }\r\n    },\r\n}) => {\r\n    const [query, setQuery] = React.useState('');\r\n    const [useSearch, setUseSearch] = React.useState(true);\r\n    \r\n    const posts = query ? nodes.filter(post => {\r\n        const {excerpt} = post;\r\n        const {title, category} = post.frontmatter;\r\n        return (\r\n            [title, category, excerpt].map(item => \r\n                item.match(new RegExp(query, \"i\")) !== null ? true : false).includes(true)\r\n        )\r\n    }) : nodes;\r\n    const postProp = posts.map(post => \r\n        <PostLink key={post.frontmatter.path} post={post} />)\r\n    return <Layout searchbar={{ useSearch, setUseSearch, query, setQuery }}\r\n                contents={\r\n                    <main>\r\n                        <About />\r\n                        <div className=\"toggle-box\">\r\n                            <Link to=\"/\" className=\"current-view\">All</Link>\r\n                            <Link to=\"/category\">Category</Link>\r\n                        </div>\r\n                        {postProp}\r\n                    </main>\r\n                }\r\n            />\r\n};\r\nexport default IndexPage\r\n\r\nexport const pageQuery = graphql`\r\n    query {\r\n        allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date]}) {\r\n            nodes {\r\n                excerpt(truncate: true, pruneLength: 120)\r\n                frontmatter {\r\n                    category\r\n                    date(formatString: \"YYYY-MM-DD\")\r\n                    path\r\n                    title\r\n                    thumbnailImage {\r\n                        childImageSharp {\r\n                            gatsbyImageData(width: 80 height: 80 transformOptions: {fit: CONTAIN})\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`"],"names":["post","image","getImage","frontmatter","thumbnailImage","id","Link","to","path","className","G","alt","category","date","title","excerpt","nodes","data","allMarkdownRemark","React","query","setQuery","useSearch","setUseSearch","postProp","filter","map","item","match","RegExp","includes","key","searchbar","contents"],"sourceRoot":""}