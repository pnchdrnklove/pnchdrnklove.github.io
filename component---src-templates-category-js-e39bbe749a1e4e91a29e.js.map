{"version":3,"file":"component---src-templates-category-js-e39bbe749a1e4e91a29e.js","mappings":"6LA0CA,EAtCmB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACZC,EACgB,oBAAXC,OACPA,OAAOC,SAASC,SAASC,MAAM,KAAKC,OAAOC,SAAW,GAC1DC,QAAQC,IAAIC,MAAMC,QAAQV,IAa1B,IAAMW,EAAWZ,EAAU,gCACvB,gBAAC,EAAAa,KAAD,CAAMC,GAAE,aAAed,EAAQe,SAAYC,UAAU,QACjD,4BAAOhB,EAAQe,WAEnB,wBAAMC,UAAU,aAAhB,KACA,gBAAC,EAAAH,KAAD,CAAMC,GAAG,IAAIE,UAAU,QACnB,4BAAOhB,EAAQiB,SAGnB,iCAAG,WAAUP,MAAMC,QAAQV,IAAgBA,EAAaiB,KAAI,SAAAC,GAAI,OAC5D,gCAAE,gBAAC,EAAAN,KAAD,CAAMC,GAAgB,aAATK,EAAA,IAA0BA,EAA1B,aAAgDA,EACnDC,IAAG,IAAMD,EAAQH,UAAU,QACnC,4BAAOG,IAET,wBAAMH,UAAU,aAAhB,YAIV,OAAO,uBAAKA,UAAU,cAAcJ,ICpBxC,EAjBe,SAAC,GAAmB,IAAjBS,EAAgB,EAAhBA,UACVC,EAAYD,MAAAA,OAAH,EAAGA,EAAWC,UAC7B,EAA4BA,EAAYD,EAAY,GAA5CE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OAAO,gCACL,uBAAKR,UAAU,cAAcS,MAAO,CAACC,QAASJ,EAAY,SAAW,SACnE,yBACEK,MAAOJ,EACPK,QAAS,gBAAYD,EAAZ,EAAEE,OAAUF,MAAZ,OAAyBH,EAASG,IAC3CG,KAAK,SACLC,GAAG,gBACHC,YAAY,oBACZC,WAAW,aCJbC,EAAS,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWd,EAAyB,EAAzBA,UAAWrB,EAAc,EAAdA,QAQpC,OAAO,gCACH,8BACI,uBAAKgB,UAAU,wDACb,gBAAC,EAAAH,KAAD,CAAMC,GAAG,IAAIiB,GAAG,eAAeK,QAAS,SAAAC,GAAK,OAAsBA,EATvEC,YAAYC,gCACVlB,MAAAA,GAAAA,EAAWC,WACXD,EAAUG,SAAS,OAQdW,GAEH,wBAAMnB,UAAU,aAAhB,KACA,gBAAC,EAAD,CAAYhB,QAASA,IACrB,gBAAC,EAAD,CAAQqB,UAAWA,QAUjCa,EAAOM,aAAe,CACpBL,UAAU,IAGZ,QCGA,EAlCe,SAAC,GAAsC,IAAD,EAAnCM,EAAmC,EAAnCA,SAAUpB,EAAyB,EAAzBA,UAAWrB,EAAc,EAAdA,QAC/B0C,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,EAAD,CAAQR,UAAS,UAAEO,EAAKE,KAAKC,oBAAZ,aAAE,EAAwB5B,MACvCI,UAAWA,EACXrB,QAASA,IACXyC,EACF,uBAAKzB,UAAU,sBACb,0BAAQA,UAAU,6BAChB,wBAAMA,UAAU,2BAAhB,MACK,IAAI8B,MAAOC,cADhB,qBAEE,qBAAGC,KAAK,4BAAR,gB,8DCEZ,UAxBmB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaP,EAAW,EAAXA,KACzB3B,EAAakC,EAAblC,SACR,EAA8B2B,EAAKQ,kBAA3BC,EAAR,EAAQA,MACFC,EADN,EAAeC,WACK,yBAAyCtC,EAAzC,IACpB,OACE,gBAAC,IAAD,CAAQ0B,SACR,4BACA,2BACE,0BAAKW,GACL,0BACGD,EAAMjC,KAAI,YAAe,IACxB,EADuB,EAAXoC,KACiBC,YAArBtC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,KACf,OACE,sBAAIC,IAAKD,GACP,gBAAC,EAAAN,KAAD,CAAMC,GAAIK,GAAOF,QAKzB,gBAAC,EAAAJ,KAAD,CAAMC,GAAG,aAAT","sources":["webpack://gatsby-starter-default/./src/components/navigation.js","webpack://gatsby-starter-default/./src/components/search.js","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/templates/category.js"],"sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"../css/navigation.css\"\r\n\r\nconst Navigation = ({ navData }) => {\r\n    const splittedPath = \r\n        typeof window !== 'undefined' ? \r\n        window.location.pathname.split('/').filter(Boolean) : '';\r\n    console.log(Array.isArray(splittedPath));\r\n    // delete splittedPath[0];\r\n    // const pathLink = splittedPath.map((e, i) => {\r\n    //     return <React.Fragment key={'path-link-' + i}>\r\n           \r\n    //         { i === splittedPath.length - 1 ? \r\n    //             <a href=\"#\" className=\"path\"><span>{postData.title}</span></a> : \r\n    //             <> \r\n    //                 <a href=\"#\" className=\"path\"><span>{e}</span></a>\r\n    //                 <span className=\"seperator\">&gt;</span>\r\n    //             </> }\r\n    //     </React.Fragment>\r\n    // })\r\n    const pathLink = navData ? <>\r\n        <Link to={`/category/${navData.category}`} className=\"path\">\r\n            <span>{navData.category}</span>\r\n        </Link>\r\n        <span className=\"seperator\">&gt;</span>\r\n        <Link to=\"#\" className=\"path\">\r\n            <span>{navData.title}</span>\r\n        </Link>\r\n        </> :\r\n        <>{()=>{ if (Array.isArray(splittedPath)) {splittedPath.map(path => \r\n            <><Link to={`${path === 'category' ? `/${path}` : `/category/${path}`}`}\r\n                        key={`/${path}`} className=\"path\">\r\n                <span>{path}</span>\r\n              </Link>\r\n              <span className=\"seperator\">&gt;</span>\r\n            </>\r\n        )}}}\r\n        </>\r\n    return <div className=\"navigation\">{pathLink}</div>\r\n}\r\n\r\nexport default Navigation","import React from \"react\"\r\n\r\nconst Search = ({ searchbar }) => {\r\n  const useSearch = searchbar?.useSearch;\r\n  const { query, setQuery } = useSearch ? searchbar : '';\r\n  return <>\r\n    <div className=\"post-search\" style={{display: useSearch ? 'inline' : 'none'}}>\r\n      <input\r\n        value={query}\r\n        onInput={({target: { value }}) => setQuery(value)}\r\n        type=\"search\"\r\n        id=\"header-search\"\r\n        placeholder=\"Search blog posts\"\r\n        spellCheck=\"false\"\r\n      />\r\n    </div>\r\n    </>\r\n  }\r\n\r\nexport default Search","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport Navigation from \"./navigation\"\r\nimport Search from \"./search\"\r\n\r\nimport \"../css/header.css\"\r\n\r\nconst Header = ({ siteTitle, searchbar, navData }) => {\r\n    const removeSearchValue = e => {\r\n        e.nativeEvent.stopImmediatePropagation();\r\n        if (searchbar?.useSearch) { \r\n            searchbar.setQuery('');\r\n        }\r\n    }\r\n    \r\n    return <>\r\n        <header>\r\n            <nav className=\"container mynavbar navbar navbar-expand-md fixed-top\">\r\n              <Link to=\"/\" id=\"header-title\" onClick={event => removeSearchValue(event)}>\r\n                {siteTitle}\r\n              </Link>\r\n              <span className=\"seperator\">&gt;</span>\r\n              <Navigation navData={navData}/>\r\n              <Search searchbar={searchbar}></Search>\r\n            </nav>\r\n        </header>\r\n        </>\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,  \r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\n\r\nimport \"../css/layout.css\"\r\n\r\nconst Layout = ({ contents, searchbar, navData }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `\r\n  )\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title}\r\n          searchbar={searchbar}\r\n          navData={navData}/>\r\n      { contents }\r\n      <div className=\"container myfooter\">\r\n        <footer className=\"container-fluid py-3 my-4\">\r\n          <span className=\"mb-3 mb-md-0 text-muted\">\r\n            Â© {new Date().getFullYear()} &middot; Built with {` `}\r\n            <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n          </span>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  contents: PropTypes.node,\r\n  about: PropTypes.node,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\n\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\n\r\nconst categories = ({ pageContext, data }) => {\r\n  const { category } = pageContext\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const categoryHeader = `${totalCount} post(s) in category \"${category}\"`\r\n  return (\r\n    <Layout contents={\r\n    <main>\r\n    <div>\r\n      <h1>{categoryHeader}</h1>\r\n      <ul>\r\n        {edges.map(({ node }) => {\r\n          const { title, path } = node.frontmatter\r\n          return (\r\n            <li key={path}>\r\n              <Link to={path}>{title}</Link>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n      <Link to=\"/category\">All categories</Link>\r\n    </div>\r\n    </main>}/>\r\n  )\r\n}\r\nexport default categories\r\nexport const pageQuery = graphql`\r\n  query($category: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { category: { in: [$category] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            path\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["navData","splittedPath","window","location","pathname","split","filter","Boolean","console","log","Array","isArray","pathLink","Link","to","category","className","title","map","path","key","searchbar","useSearch","query","setQuery","style","display","value","onInput","target","type","id","placeholder","spellCheck","Header","siteTitle","onClick","event","nativeEvent","stopImmediatePropagation","defaultProps","contents","data","useStaticQuery","site","siteMetadata","Date","getFullYear","href","pageContext","allMarkdownRemark","edges","categoryHeader","totalCount","node","frontmatter"],"sourceRoot":""}